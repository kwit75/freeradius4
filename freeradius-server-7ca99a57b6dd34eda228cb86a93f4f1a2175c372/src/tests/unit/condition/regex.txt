proto-dictionary radius

condition &User-Name !~ /^foo\nbar$/
match !&User-Name =~ /^foo\nbar$/

condition (ok =~ handled)
match ERROR offset 7 Expected regular expression

condition (ok == /foo/)
match ERROR offset 7 Unexpected regular expression

condition /foo/ =~ bar
match ERROR offset 0 Unexpected regular expression

#
#  Convert !~ to !(COND) for regex
#
condition foo =~ /bar/
match foo =~ /bar/

condition foo !~ /bar/
match !foo =~ /bar/

condition !foo !~ /bar/
match foo =~ /bar/

#
#  Flags
#
condition foo =~ /bar/i
match foo =~ /bar/i

condition foo =~ /bar/m
match foo =~ /bar/m

condition foo =~ /bar/im
match foo =~ /bar/im

condition foo =~ /bar/gimsux
match foo =~ /bar/gimsux

condition foo =~ /bar/ima
match ERROR offset 14 Unexpected text after condition

condition foo =~ /bar/ii
match ERROR offset 13 Duplicate flag

condition foo =~ /bar/iia
match ERROR offset 13 Duplicate flag

#
#  Escape the backslashes correctly
#  And print them correctly
#

condition &User-Name =~ /@|\\/
match &User-Name =~ /@|\\/

condition &User-Name =~ /^([^\\]*)\\(.*)$/
match &User-Name =~ /^([^\\]*)\\(.*)$/

xlat %{1}
match %{1}

xlat %{33}
match ERROR offset 2: Invalid regex reference.  Must be in range 0-32

condition &User-Name == /foo/
match ERROR offset 14 Unexpected regular expression

#
#  Allow a match operator.  Which the user will
#  hopefully *not* use with a special character
#  like '=' or '{' or '}.  If they do, too bad.
#
condition &User-Name =~ m,foo,
match &User-Name =~ /foo/

count
match 41
